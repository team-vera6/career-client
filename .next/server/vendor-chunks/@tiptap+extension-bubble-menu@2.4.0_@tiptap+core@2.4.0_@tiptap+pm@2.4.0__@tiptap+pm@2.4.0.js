"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tiptap+extension-bubble-menu@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0";
exports.ids = ["vendor-chunks/@tiptap+extension-bubble-menu@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@tiptap+extension-bubble-menu@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-bubble-menu/dist/index.js":
/*!*******************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@tiptap+extension-bubble-menu@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-bubble-menu/dist/index.js ***!
  \*******************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BubbleMenu: () => (/* binding */ BubbleMenu),\n/* harmony export */   BubbleMenuPlugin: () => (/* binding */ BubbleMenuPlugin),\n/* harmony export */   BubbleMenuView: () => (/* binding */ BubbleMenuView),\n/* harmony export */   \"default\": () => (/* binding */ BubbleMenu)\n/* harmony export */ });\n/* harmony import */ var _tiptap_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tiptap/core */ \"(ssr)/./node_modules/.pnpm/@tiptap+core@2.4.0_@tiptap+pm@2.4.0/node_modules/@tiptap/core/dist/index.js\");\n/* harmony import */ var _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tiptap/pm/state */ \"(ssr)/./node_modules/.pnpm/@tiptap+pm@2.4.0/node_modules/@tiptap/pm/state/dist/index.js\");\n/* harmony import */ var tippy_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tippy.js */ \"(ssr)/./node_modules/.pnpm/tippy.js@6.3.7/node_modules/tippy.js/dist/tippy.esm.js\");\n\n\n\n\nclass BubbleMenuView {\r\n    constructor({ editor, element, view, tippyOptions = {}, updateDelay = 250, shouldShow, }) {\r\n        this.preventHide = false;\r\n        this.shouldShow = ({ view, state, from, to, }) => {\r\n            const { doc, selection } = state;\r\n            const { empty } = selection;\r\n            // Sometime check for `empty` is not enough.\r\n            // Doubleclick an empty paragraph returns a node size of 2.\r\n            // So we check also for an empty text size.\r\n            const isEmptyTextBlock = !doc.textBetween(from, to).length && (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_1__.isTextSelection)(state.selection);\r\n            // When clicking on a element inside the bubble menu the editor \"blur\" event\r\n            // is called and the bubble menu item is focussed. In this case we should\r\n            // consider the menu as part of the editor and keep showing the menu\r\n            const isChildOfMenu = this.element.contains(document.activeElement);\r\n            const hasEditorFocus = view.hasFocus() || isChildOfMenu;\r\n            if (!hasEditorFocus || empty || isEmptyTextBlock || !this.editor.isEditable) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        this.mousedownHandler = () => {\r\n            this.preventHide = true;\r\n        };\r\n        this.dragstartHandler = () => {\r\n            this.hide();\r\n        };\r\n        this.focusHandler = () => {\r\n            // we use `setTimeout` to make sure `selection` is already updated\r\n            setTimeout(() => this.update(this.editor.view));\r\n        };\r\n        this.blurHandler = ({ event }) => {\r\n            var _a;\r\n            if (this.preventHide) {\r\n                this.preventHide = false;\r\n                return;\r\n            }\r\n            if ((event === null || event === void 0 ? void 0 : event.relatedTarget) && ((_a = this.element.parentNode) === null || _a === void 0 ? void 0 : _a.contains(event.relatedTarget))) {\r\n                return;\r\n            }\r\n            this.hide();\r\n        };\r\n        this.tippyBlurHandler = (event) => {\r\n            this.blurHandler({ event });\r\n        };\r\n        this.handleDebouncedUpdate = (view, oldState) => {\r\n            const selectionChanged = !(oldState === null || oldState === void 0 ? void 0 : oldState.selection.eq(view.state.selection));\r\n            const docChanged = !(oldState === null || oldState === void 0 ? void 0 : oldState.doc.eq(view.state.doc));\r\n            if (!selectionChanged && !docChanged) {\r\n                return;\r\n            }\r\n            if (this.updateDebounceTimer) {\r\n                clearTimeout(this.updateDebounceTimer);\r\n            }\r\n            this.updateDebounceTimer = window.setTimeout(() => {\r\n                this.updateHandler(view, selectionChanged, docChanged, oldState);\r\n            }, this.updateDelay);\r\n        };\r\n        this.updateHandler = (view, selectionChanged, docChanged, oldState) => {\r\n            var _a, _b, _c;\r\n            const { state, composing } = view;\r\n            const { selection } = state;\r\n            const isSame = !selectionChanged && !docChanged;\r\n            if (composing || isSame) {\r\n                return;\r\n            }\r\n            this.createTooltip();\r\n            // support for CellSelections\r\n            const { ranges } = selection;\r\n            const from = Math.min(...ranges.map(range => range.$from.pos));\r\n            const to = Math.max(...ranges.map(range => range.$to.pos));\r\n            const shouldShow = (_a = this.shouldShow) === null || _a === void 0 ? void 0 : _a.call(this, {\r\n                editor: this.editor,\r\n                view,\r\n                state,\r\n                oldState,\r\n                from,\r\n                to,\r\n            });\r\n            if (!shouldShow) {\r\n                this.hide();\r\n                return;\r\n            }\r\n            (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.setProps({\r\n                getReferenceClientRect: ((_c = this.tippyOptions) === null || _c === void 0 ? void 0 : _c.getReferenceClientRect)\r\n                    || (() => {\r\n                        if ((0,_tiptap_core__WEBPACK_IMPORTED_MODULE_1__.isNodeSelection)(state.selection)) {\r\n                            let node = view.nodeDOM(from);\r\n                            const nodeViewWrapper = node.dataset.nodeViewWrapper ? node : node.querySelector('[data-node-view-wrapper]');\r\n                            if (nodeViewWrapper) {\r\n                                node = nodeViewWrapper.firstChild;\r\n                            }\r\n                            if (node) {\r\n                                return node.getBoundingClientRect();\r\n                            }\r\n                        }\r\n                        return (0,_tiptap_core__WEBPACK_IMPORTED_MODULE_1__.posToDOMRect)(view, from, to);\r\n                    }),\r\n            });\r\n            this.show();\r\n        };\r\n        this.editor = editor;\r\n        this.element = element;\r\n        this.view = view;\r\n        this.updateDelay = updateDelay;\r\n        if (shouldShow) {\r\n            this.shouldShow = shouldShow;\r\n        }\r\n        this.element.addEventListener('mousedown', this.mousedownHandler, { capture: true });\r\n        this.view.dom.addEventListener('dragstart', this.dragstartHandler);\r\n        this.editor.on('focus', this.focusHandler);\r\n        this.editor.on('blur', this.blurHandler);\r\n        this.tippyOptions = tippyOptions;\r\n        // Detaches menu content from its current parent\r\n        this.element.remove();\r\n        this.element.style.visibility = 'visible';\r\n    }\r\n    createTooltip() {\r\n        const { element: editorElement } = this.editor.options;\r\n        const editorIsAttached = !!editorElement.parentElement;\r\n        if (this.tippy || !editorIsAttached) {\r\n            return;\r\n        }\r\n        this.tippy = (0,tippy_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(editorElement, {\r\n            duration: 0,\r\n            getReferenceClientRect: null,\r\n            content: this.element,\r\n            interactive: true,\r\n            trigger: 'manual',\r\n            placement: 'top',\r\n            hideOnClick: 'toggle',\r\n            ...this.tippyOptions,\r\n        });\r\n        // maybe we have to hide tippy on its own blur event as well\r\n        if (this.tippy.popper.firstChild) {\r\n            this.tippy.popper.firstChild.addEventListener('blur', this.tippyBlurHandler);\r\n        }\r\n    }\r\n    update(view, oldState) {\r\n        const { state } = view;\r\n        const hasValidSelection = state.selection.$from.pos !== state.selection.$to.pos;\r\n        if (this.updateDelay > 0 && hasValidSelection) {\r\n            this.handleDebouncedUpdate(view, oldState);\r\n            return;\r\n        }\r\n        const selectionChanged = !(oldState === null || oldState === void 0 ? void 0 : oldState.selection.eq(view.state.selection));\r\n        const docChanged = !(oldState === null || oldState === void 0 ? void 0 : oldState.doc.eq(view.state.doc));\r\n        this.updateHandler(view, selectionChanged, docChanged, oldState);\r\n    }\r\n    show() {\r\n        var _a;\r\n        (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.show();\r\n    }\r\n    hide() {\r\n        var _a;\r\n        (_a = this.tippy) === null || _a === void 0 ? void 0 : _a.hide();\r\n    }\r\n    destroy() {\r\n        var _a, _b;\r\n        if ((_a = this.tippy) === null || _a === void 0 ? void 0 : _a.popper.firstChild) {\r\n            this.tippy.popper.firstChild.removeEventListener('blur', this.tippyBlurHandler);\r\n        }\r\n        (_b = this.tippy) === null || _b === void 0 ? void 0 : _b.destroy();\r\n        this.element.removeEventListener('mousedown', this.mousedownHandler, { capture: true });\r\n        this.view.dom.removeEventListener('dragstart', this.dragstartHandler);\r\n        this.editor.off('focus', this.focusHandler);\r\n        this.editor.off('blur', this.blurHandler);\r\n    }\r\n}\r\nconst BubbleMenuPlugin = (options) => {\r\n    return new _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__.Plugin({\r\n        key: typeof options.pluginKey === 'string' ? new _tiptap_pm_state__WEBPACK_IMPORTED_MODULE_0__.PluginKey(options.pluginKey) : options.pluginKey,\r\n        view: view => new BubbleMenuView({ view, ...options }),\r\n    });\r\n};\n\n/**\r\n * This extension allows you to create a bubble menu.\r\n * @see https://tiptap.dev/api/extensions/bubble-menu\r\n */\r\nconst BubbleMenu = _tiptap_core__WEBPACK_IMPORTED_MODULE_1__.Extension.create({\r\n    name: 'bubbleMenu',\r\n    addOptions() {\r\n        return {\r\n            element: null,\r\n            tippyOptions: {},\r\n            pluginKey: 'bubbleMenu',\r\n            updateDelay: undefined,\r\n            shouldShow: null,\r\n        };\r\n    },\r\n    addProseMirrorPlugins() {\r\n        if (!this.options.element) {\r\n            return [];\r\n        }\r\n        return [\r\n            BubbleMenuPlugin({\r\n                pluginKey: this.options.pluginKey,\r\n                editor: this.editor,\r\n                element: this.options.element,\r\n                tippyOptions: this.options.tippyOptions,\r\n                updateDelay: this.options.updateDelay,\r\n                shouldShow: this.options.shouldShow,\r\n            }),\r\n        ];\r\n    },\r\n});\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@tiptap+extension-bubble-menu@2.4.0_@tiptap+core@2.4.0_@tiptap+pm@2.4.0__@tiptap+pm@2.4.0/node_modules/@tiptap/extension-bubble-menu/dist/index.js\n");

/***/ })

};
;